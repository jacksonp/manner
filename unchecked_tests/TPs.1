.SH DESCRIPTION
The QRegExp class provides pattern matching using regular expressions.
.PP

.PP
Regular expressions, or "regexps", provide a way to find patterns within text. This is useful in many contexts, for example:
.PP
<center>.nf
.TS
l - l. Validation A regexp can be used to check whether a piece of text meets some criteria, e.g. is an integer or contains no whitespace. Searching Regexps provide a much more powerful means of searching text than simple string matching does. For example we can create a regexp which says "find one of the words 'mail', 'letter' or 'correspondence' but not any of the words 'email', 'mailman' 'mailer', 'letterbox' etc." Search and Replace A regexp can be used to replace a pattern with a piece of text, for example replace all occurrences of '&' with '&amp;' except where the '&' is already followed by 'amp;'. String Splitting
.TE
.fi
</center>
.PP
We present a very brief introduction to regexps, a description of Qt's regexp language, some code examples, and finally the function documentation itself. QRegExp is modeled on Perl's regexp language, and also fully supports Unicode. QRegExp can also be used in the weaker 'wildcard' (globbing) mode which works in a similar way to command shells. A good text on regexps is \fIMastering Regular Expressions: Powerful Techniques for Perl and Other Tools\fR by Jeffrey E. Friedl, ISBN 1565922573.
.PP
Experienced regexp users may prefer to skip the introduction and go directly to the relevant information.
.PP
In case of multi-threaded programming, note that QRegExp depends on QThreadStorage internally. For that reason, QRegExp should only be used with threads started with QThread, i.e. not with threads started with platform-specific APIs.
.PP

.TP
Introduction
.TP
Characters and Abbreviations for Sets of Characters
.TP
Sets of Characters
.TP
Quantifiers
.TP
Capturing Text
.TP
Assertions
.TP
Wildcard Matching (globbing)
.TP
Notes for Perl Users
.TP
 Code Examples


